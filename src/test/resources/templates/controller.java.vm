package ${package.Controller};

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import ${cfg.parent}.query.${entity}Query;
import cn.changge.base.utils.AxiosResult;
import cn.changge.base.utils.PageInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/${table.entityPath}")
public class ${entity}Controller {
    @Autowired
    public ${table.serviceName} ${table.entityPath}Service;


    /**
     * 保存和修改公用的
     * @param ${table.entityPath}  传递的实体
     * @return Ajaxresult转换结果
     */
    @PutMapping
    public AxiosResult addOrUpdate(@RequestBody ${entity} ${table.entityPath}){
       
            if( ${table.entityPath}.getId()!=null)
                ${table.entityPath}Service.update(${table.entityPath});
            else
                ${table.entityPath}Service.insert(${table.entityPath});
            return AxiosResult.me().setSuccess(true);
  
    }
    /**
    * 删除对象信息
    * @param id
    * @return
    */
    @DeleteMapping(value="/{id}")
    public AxiosResult delete(@PathVariable("id") Long id){

            ${table.entityPath}Service.delete(id);
            return AxiosResult.me().setSuccess(true);
      
    }
	
    //获取用户
    @GetMapping("/{id}")
    public AxiosResult get(@PathVariable("id")Long id)
    {
        try {
            ${entity} ${table.entityPath} = ${table.entityPath}Service.queryById(id);
            return AxiosResult.me().setResultObj(${table.entityPath});
       
    }


    /**
    * 查看所有的员工信息
    * @return
    */
    @GetMapping
    public AxiosResult list(){

        
            List< ${entity}> list = ${table.entityPath}Service.queryAll();
            return AxiosResult.me().setSuccess(true).setResultObj(list);
       
    }


    /**
    * 分页查询数据
    *
    * @param query 查询对象
    * @return PageList 分页对象
    */
    @PostMapping
    public AxiosResult pageList(@RequestBody ${entity}Query query)
    {
        
            PageInfo<${entity}> pageList = ${table.entityPath}Service.queryPage(query);
            return  AxiosResult.me().setSuccess(true).setResultObj(pageList);
       
    }

    /**
   * 批量删除
   */
    @PatchMapping
    public AxiosResult batchDelete(@RequestBody List<Long> ids)
    {

                ${table.entityPath}Service.batchDelete(ids);
            return AxiosResult.me().setSuccess(true);

    }
}
